struct node * insertfront(struct node *,int,int,int);
void SJNP(struct node *);
struct node * sortSJF(struct node *);
struct node * insertfront(struct node *header,int b,int a, int p)
{
	struct node * temp=createNode(b,a,p);
	temp->next=header;
	header=temp;
	return header;
}
void SJNP(struct node *header)
{	
   
	int copmlition_time=0,time_around=0,wating_time=0,avarage;
	cout<<"Scheduling Method:  Shortest-Job-First-Non Preemtive"<<endl;
	cout<<"Process Waiting Times:"<<endl;
	avarage=calwaiting_time(header,copmlition_time,time_around,wating_time);
	cout<<"Average Waiting Time: "<<avarage<<" ms";
}
struct node * sortSJF(struct node *header)
{
	int swaping;
	struct node *lft;  
	struct node *right = NULL;
	do
	{	
		swaping = 0;
		lft = header;
		while(lft->next != right)
		{
			if (lft->burst_time> lft->next->burst_time) 
			{
				swapFCFS(lft, lft->next); 
                swaping = 1;
			}
			lft= lft->next;
		}
       
		right= lft;
	}while(swaping);
    return(header);
}
